// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Option {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  issue     Issue    @relation(fields: [issueId], references: [id])
  issueId   String   @db.ObjectId
  votes     Vote[]
}

model Issue {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  Ballot      Ballot?  @relation(fields: [ballotId], references: [id])
  ballotId    String?  @db.ObjectId
  options     Option[]
  votes       Vote[]
}

model Ballot {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  active    Boolean  @default(false)
  issues    Issue[]
  votes     Vote[]
}

model Vote {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ballot    Ballot   @relation(fields: [ballotId], references: [id])
  ballotId  String   @db.ObjectId
  issue     Issue    @relation(fields: [issueId], references: [id])
  issueId   String   @db.ObjectId
  option    Option   @relation(fields: [optionId], references: [id])
  optionId  String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  username  String   @unique
  password  String
  votes     Vote[]
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    String   @db.ObjectId
}

model Role {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  users     User[]
}
